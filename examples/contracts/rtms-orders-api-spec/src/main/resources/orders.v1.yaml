openapi: 3.0.0
info:
  version: 1.0.0
  title: Orders API
  description: Order APIs specification for retail management system.
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.txt'
  contact:
    email: bot.bhuwan@gmail.com
    url: 'http://bhuwanupadhyay.github.io/'
    name: Bhuwan Prasad Upadhyay
servers:
  - description: DDD building blocks best practices.
    url: 'https://bhuwanupdhyay.github.io'
components:
  schemas:
    OrderPageList:
      title: OrderPageList
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/OrderResource'
        page:
          $ref: '#/components/schemas/PageResource'
      description: Order list with pagination.
    CreateOrder:
      title: CreateOrder
      type: object
      description: Create order command request payload.
      properties:
        customerId:
          type: string
        deliveryAddress:
          type: string
        contactPhone:
          type: string
        productId:
          type: string
        quantity:
          type: integer
      required:
        - customerId
        - deliveryAddress
        - contactPhone
        - productId
    PageResource:
      title: PageResource
      type: object
      properties:
        pageSize:
          type: integer
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
      description: Pagination page resource.
    OrderResource:
      title: OrderResource
      type: object
      description: Order response model.
      properties:
        id:
          type: string
        customerId:
          type: string
        deliveryAddress:
          type: string
        contactPhone:
          type: string
        productId:
          type: string
        quantity:
          type: integer
paths:
  /orders:
    get:
      summary: GET orders.
      tags:
        - orders
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderPageList'
      operationId: get-orders
      description: Get orders with pagination API.
      parameters:
        - schema:
            type: string
          in: query
          name: filterJson
        - schema:
            type: string
          in: query
          name: sort
    post:
      summary: POST orders.
      operationId: post-orders
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResource'
      description: Create new order API.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrder'
        description: Create order command.
      tags:
        - orders
  '/orders/{orderId}':
    parameters:
      - schema:
          type: string
        name: orderId
        in: path
        required: true
    get:
      summary: GET orders by order id.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResource'
      operationId: get-orders-by-orderId
      description: Get orders by order id.
      tags:
        - orders
